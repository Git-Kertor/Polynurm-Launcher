<Window x:Class="Polynurm_Launcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        mc:Ignorable="d"
        Title="Polynurm Launcher" MinHeight="600" MinWidth="1000" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip" Height="486" Width="656.5">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Window.Background>
        <SolidColorBrush Color="#1a1a1a"/>
    </Window.Background>

    <Window.Resources>

        <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">

            <Style.Triggers>
                <!-- Add to avoid border disappearing when window is maximised -->
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Maximized">
                    <Setter Property="Margin" Value="5"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Normal">
                    <Setter Property="Margin" Value="0"/>
                </DataTrigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#2d2d2d" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#4c4c4c" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="#999999" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#e81123" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#8f0f19" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="titleColor" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="{x:Null}" />
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey}" Color="Orange"/>
            </Style.Resources>
        </Style>

        <DropShadowEffect x:Key="textEffect" ShadowDepth="5" Color="Black" Opacity="0.3" BlurRadius="10"/>
        <Style x:Key="tabButtonStyle" TargetType="Grid">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1d2024" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="postText" TargetType="TextBlock" >
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontFamily" Value="sans serif"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="postBackground" TargetType="Border">
            <Setter Property="Background" Value="black"/>
            <Setter Property="Opacity" Value=".7"/>
        </Style>



        <Style x:Key="taskBarButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Gray">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2f3133"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="functionButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#424242"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <!--<Setter Property="Margin" Value="3"/>-->

            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" Background="#333333" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="2"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="#424242"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="#3c3c3c"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Border Style="{StaticResource WindowMainPanelStyle}">

        <Grid >

            <Grid VerticalAlignment="Top" Panel.ZIndex="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="46" />
                    <ColumnDefinition Width="46" />
                    <ColumnDefinition Width="46" />
                </Grid.ColumnDefinitions>

                <TextBlock
		Grid.Column="1"
		Margin="15,6,35,10"
		VerticalAlignment="Center"
		FontSize="12"
        Foreground="#999999"
		Text="Polynurm Launcher" Grid.ColumnSpan="2">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                    <Setter Property="Foreground" Value="red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Button
		Grid.Column="2"
		Click="OnMinimizeButtonClick"
		RenderOptions.EdgeMode="Aliased"
		Style="{StaticResource TitleBarButtonStyle}">
                    <Path
			Width="46"
			Height="32"
			Data="M 18,15 H 28"
			Stroke="#999999"
			StrokeThickness="1" />
                </Button>
                <Button
		Name="maximizeButton"
		Grid.Column="3"
		Click="OnMaximizeRestoreButtonClick"
		Style="{StaticResource TitleBarButtonStyle}">
                    <Path
			Width="46"
			Height="32"
			Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
			Stroke="#999999"
			StrokeThickness="1" />
                </Button>
                <Button
		Name="restoreButton"
		Grid.Column="3"
		Click="OnMaximizeRestoreButtonClick"
		Style="{StaticResource TitleBarButtonStyle}">
                    <Path
			Width="46"
			Height="32"
			Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
			Stroke="#999999"
			StrokeThickness="1" />
                </Button>
                <Button
		Grid.Column="4"
		Click="OnCloseButtonClick"
		Style="{StaticResource TitleBarCloseButtonStyle}">
                    <Path
			Width="46"
			Height="32"
			Data="M 18,11 27,20 M 18,20 27,11"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
                </Button>
            </Grid>
            <Border Height="32" Background="#0d0d0d" VerticalAlignment="Top"/>





            <Grid x:Name="sidebar" HorizontalAlignment="Left" Width="50" Background="#101214" Margin="0,32,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                </Grid.RowDefinitions>
                <Button Content="..." MouseMove="SetToolTipPosition" Style="{StaticResource functionButton}" FontSize="20" Foreground="white" Click="SelectDirectory" Grid.Row="1" Margin="10">
                    <Button.ToolTip>
                        <ToolTip Foreground="White" Background="#1e1e1e" x:Name="ChooseDirectoryToolTip" Content="Choose Directory"/>
                    </Button.ToolTip>

                </Button>
                <Button Content=">" MouseMove="SetToolTipPosition" Style="{StaticResource functionButton}" FontSize="15" Foreground="white" Click="OpenDirectory" Grid.Row="2" Margin="10">
                    <Button.ToolTip>
                        <ToolTip Foreground="White" Background="#1e1e1e" x:Name="OpenDirectoryToolTip" Content="Open Directory"/>
                    </Button.ToolTip>
                </Button>

            </Grid>

            <ScrollViewer Margin="50,32,0,0" Background="Transparent" BorderThickness="0" ScrollViewer.CanContentScroll="False" VerticalScrollBarVisibility="Auto">

                <ScrollViewer.Resources>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="12" Margin="-20,0,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            <RowDefinition Height="0.00001*"/>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        </Grid.RowDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ScrollViewer.Resources>

                <StackPanel x:Name="ItemContainer">
                    <Border x:Name="ItemTemplateParent" Height="80" MaxHeight="400" Margin="20,20,20,20" Visibility="Visible" CornerRadius="5">
                        <Grid x:Name="ItemTemplateGlue">
                            <Border x:Name="ItemTemplateContent" Height="80" Visibility="Visible" CornerRadius="5" VerticalAlignment="Top">
                                <Border.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background" Value="#242423"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#282828"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Resources>
                                <Grid Margin="20">
                                    <StackPanel Orientation="Horizontal">
                                        <Label x:Name="ItemTemplateLabel" Content="CloneQube" VerticalAlignment="Center" Foreground="White" FontFamily="YD Gothic" FontWeight="Normal" FontSize="28" Margin="0,-12,0,12"/>
                                        <Label x:Name="ItemTemplateVersion" Content="Version 1.0" VerticalAlignment="Bottom" Foreground="White" FontFamily="YD Gothic" FontWeight="Normal" FontSize="12" Height="23" Margin="0,0,0,15"/>
                                    </StackPanel>
                                    <Label x:Name="ItemTemplateDirectory" Content="C:/Users/Admin/Polynurm Studios" VerticalAlignment="Center" Foreground="White" FontFamily="YD Gothic" FontWeight="Normal" FontSize="12" Margin="3,28,-3,-12"/>
                                    <Button x:Name="ItemTemplatePrimaryButton" Style="{StaticResource functionButton}" Content="Play" Foreground="White" HorizontalAlignment="Right" Width="150" Margin="0,0,18,0">
                                        <Button.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="15"/>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                    <Button x:Name="ItemTemplateSecondaryButton" Style="{StaticResource functionButton}" Content="Update" Foreground="White" HorizontalAlignment="Right" Width="150" Margin="0,0,187,0">
                                        <Button.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="15"/>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                    <Button x:Name="ItemTemplateExpanderButton" Style="{StaticResource functionButton}" Foreground="White" HorizontalAlignment="Right" Width="20" Margin="0,-20,-20,-20">
                                        <Button.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="2,5,5,2"/>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </Grid>
                            </Border>
                            <Border x:Name="ItemTemplateExpanderParent" Height="280" Margin="0,70,0,20" Opacity="0" CornerRadius="5" Background="#202020" Panel.ZIndex="-1">
                                <Grid x:Name="ItemTemplateExpanderContainer">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="ItemTemplateExpanderImage" Source="Resources/AgileApeWindow.png" Margin="30,35,30,25" Grid.Column="0"/>
                                    <Label Name="ItemTemplateExpanderTextTitle" Foreground="White" FontSize="20" FontWeight="Medium" Content="Description" Grid.Column="1" Margin="24,28,308,214"/>
                                    <TextBlock x:Name="ItemTemplateExpanderText" Style="{StaticResource postText}" FontSize="16" Grid.Column="1" Margin="30,71,30,37" TextWrapping="Wrap" Text="Stranded on a floating rectangular platform in the void. A multitude of enemies called Qubes tumble toward you in a threatening manner. With the ability to mark a tile and capture the Qubes, clear your way and beat various levels and or create your own."/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Border>
</Window>
    
